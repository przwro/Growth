// <auto-generated />
using Growth.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Growth.Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Growth.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Street = "Cisowa 15",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Street = "Zielona 12",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Street = "Cyprysowa 8",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Growth.Domain.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Model = "Skoda Fabia",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Model = "Audi A3",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Model = "Audi A4",
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            Model = "Fiat 125p",
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Model = "Fiat 126p",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Model = "Fiat 500",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Growth.Domain.Entities.InternetShop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("InternetShops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Clobber"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Asos"
                        });
                });

            modelBuilder.Entity("Growth.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Przemek",
                            LastName = "Wróbel"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Tomek",
                            LastName = "Brzoza"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Rafał",
                            LastName = "Wiśniewski"
                        });
                });

            modelBuilder.Entity("Growth.Domain.Entities.UserInternetShop", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("InternetShopId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "InternetShopId");

                    b.HasIndex("InternetShopId");

                    b.ToTable("UserInternetShops");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            InternetShopId = 1
                        },
                        new
                        {
                            UserId = 2,
                            InternetShopId = 1
                        },
                        new
                        {
                            UserId = 2,
                            InternetShopId = 2
                        },
                        new
                        {
                            UserId = 3,
                            InternetShopId = 1
                        },
                        new
                        {
                            UserId = 3,
                            InternetShopId = 2
                        });
                });

            modelBuilder.Entity("Growth.Domain.Entities.Address", b =>
                {
                    b.HasOne("Growth.Domain.Entities.User", "User")
                        .WithOne("Address")
                        .HasForeignKey("Growth.Domain.Entities.Address", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Growth.Domain.Entities.Car", b =>
                {
                    b.HasOne("Growth.Domain.Entities.User", "User")
                        .WithMany("Cars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Growth.Domain.Entities.UserInternetShop", b =>
                {
                    b.HasOne("Growth.Domain.Entities.InternetShop", "InternetShop")
                        .WithMany("UserInternetShops")
                        .HasForeignKey("InternetShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Growth.Domain.Entities.User", "User")
                        .WithMany("UserInternetShops")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InternetShop");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Growth.Domain.Entities.InternetShop", b =>
                {
                    b.Navigation("UserInternetShops");
                });

            modelBuilder.Entity("Growth.Domain.Entities.User", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Cars");

                    b.Navigation("UserInternetShops");
                });
#pragma warning restore 612, 618
        }
    }
}
